local Players = game:GetService("Players")  
local RunService = game:GetService("RunService")  
local UserInputService = game:GetService("UserInputService")  
local player = Players.LocalPlayer  
local character = player.Character or player.CharacterAdded:Wait()  

-- Tabela para armazenar janelas  
local windows = {}  

-- Função para criar uma janela  
local function createWindow(title, position)  
    local ScreenGui = Instance.new("ScreenGui", game.CoreGui)  
    local Frame = Instance.new("Frame", ScreenGui)  
    local UIListLayout = Instance.new("UIListLayout", Frame)  
    local TitleLabel = Instance.new("TextLabel", Frame)  

    -- Configuração da janela  
    Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)  
    Frame.Position = position  
    Frame.Size = UDim2.new(0, 200, 0, 300)  
    Frame.Active = true  
    Frame.Draggable = true  

    TitleLabel.Text = title  
    TitleLabel.Size = UDim2.new(1, 0, 0, 30)  
    TitleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)  
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)  
    TitleLabel.Font = Enum.Font.SourceSansBold  
    TitleLabel.TextSize = 18  

    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder  
    UIListLayout.Padding = UDim.new(0, 10)  

    windows[title] = Frame  
    return Frame  
end  

-- Função para criar botões  
local function createButton(parent, text, callback, buttonColor, textColor)  
    local button = Instance.new("TextButton", parent)  
    button.Text = text  
    button.Size = UDim2.new(1, 0, 0, 50)  
    button.BackgroundColor3 = buttonColor or Color3.fromRGB(30, 30, 30)  
    button.TextColor3 = textColor or Color3.fromRGB(255, 255, 255)  
    button.Font = Enum.Font.SourceSansBold  
    button.TextSize = 16  
    button.MouseButton1Click:Connect(callback)  
end  

-- Criando janelas para categorias  
local playerWindow = createWindow("Player", UDim2.new(0.1, 0, 0.3, 0))  
local visualWindow = createWindow("Visual", UDim2.new(0.3, 0, 0.3, 0))  
local mainWindow = createWindow("Main", UDim2.new(0.7, 0, 0.3, 0))  

-- Botões da categoria Player  
createButton(playerWindow, "Inf Jump", function()  
    local humanoid = character:FindFirstChildOfClass("Humanoid")  
    if humanoid then  
        humanoid.Changed:Connect(function()  
            if humanoid:GetState() == Enum.HumanoidStateType.Freefall then  
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)  
            end  
        end)  
    end  
end)  

createButton(playerWindow, "TP Forward", function()  
    local root = character:FindFirstChild("HumanoidRootPart")  
    if root then  
        root.CFrame = root.CFrame * CFrame.new(0, 0, -10)  
    end  
end)  

createButton(playerWindow, "TP Safe", function()  
    local root = character:FindFirstChild("HumanoidRootPart")  
    if root then  
        root.CFrame = CFrame.new(0, 50, -8)  
    end  
end)  

createButton(playerWindow, "TP Elev", function()  
    local root = character:FindFirstChild("HumanoidRootPart")  
    if root then  
        root.CFrame = CFrame.new(0, 3, -8)  
    end  
end)  

-- Variáveis para cores  
local espNameColor = Color3.new(1, 1, 1) -- Cor padrão para ESP Names  
local espLineColor = Color3.new(1, 1, 1) -- Cor padrão para ESP Line  
local espLines = {} -- Tabela para armazenar ESP Lines  

-- Função para remover ESP Lines  
local function removeExistingESPLines()  
    for _, line in pairs(espLines) do  
        if line then line:Destroy() end  
    end  
    espLines = {}  
end  

-- Função para atualizar ESP Names  
local function updateESPNameColor(target)  
    if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then  
        local hrp = target.Character.HumanoidRootPart  
        local label = hrp:FindFirstChild("ESPLabel")  

        if not label then  
            label = Instance.new("BillboardGui", hrp)  
            label.Size = UDim2.new(0, 200, 0, 50)  
            label.AlwaysOnTop = true  
            label.Name = "ESPLabel"  

            local textLabel = Instance.new("TextLabel", label)  
            textLabel.Size = UDim2.new(1, 0, 1, 0)  
            textLabel.Text = target.Name  
            textLabel.TextColor3 = espNameColor  
            textLabel.BackgroundTransparency = 1  

            RunService.RenderStepped:Connect(function()  
                textLabel.TextColor3 = espNameColor  
            end)  
        end  
    end  
end  

-- Botão ESP Names  
createButton(visualWindow, "ESP Names", function()  
    local espNameConfigWindow = createWindow("ESP Names Config", UDim2.new(0.5, 0, 0.3, 0))  

    createButton(espNameConfigWindow, "Cor Vermelha", function() espNameColor = Color3.new(1, 0, 0) end)  
    createButton(espNameConfigWindow, "Cor Verde", function() espNameColor = Color3.new(0, 1, 0) end)  
    createButton(espNameConfigWindow, "Cor Azul", function() espNameColor = Color3.new(0, 0, 1) end)  

    createButton(espNameConfigWindow, "Fechar", function()  
        espNameConfigWindow:Destroy()  
    end)  

    for _, target in pairs(Players:GetPlayers()) do  
        if target ~= player then  
            updateESPNameColor(target)  
        end  
    end  
end)  

-- Função para desenhar ESP Line  
local function drawESPLine(target)  
    if not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then return end  
    local hrp = target.Character.HumanoidRootPart  
    local playerHRP = character:FindFirstChild("HumanoidRootPart")  

    if playerHRP then  
        local line = Instance.new("Part")  
        line.Anchored = true  
        line.CanCollide = false  
        line.Material = Enum.Material.Neon  
        line.Color = espLineColor  
        line.Size = Vector3.new(0.1, 0.1, (hrp.Position - playerHRP.Position).Magnitude)  
        line.CFrame = CFrame.new((hrp.Position + playerHRP.Position) / 2, hrp.Position)  

        RunService.RenderStepped:Connect(function()  
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then  
                hrp = target.Character.HumanoidRootPart  
                line.Size = Vector3.new(0.1, 0.1, (hrp.Position - playerHRP.Position).Magnitude)  
                line.CFrame = CFrame.new((hrp.Position + playerHRP.Position) / 2, hrp.Position)  
            else  
                line:Destroy()  
                espLines[target] = nil  
            end  
        end)  

        line.Parent = game.Workspace  
        espLines[target] = line  
    end  
end  

-- Botão ESP Line  
createButton(visualWindow, "ESP Line", function()  
    removeExistingESPLines()  
    for _, target in pairs(Players:GetPlayers()) do  
        if target ~= player then  
            drawESPLine(target)  
        end  
    end  
end)  

-- Botão para encerrar o script  
createButton(mainWindow, "Encerrar Script", function()  
    for _, gui in pairs(windows) do gui:Destroy() end  
    script:Destroy()  
end)
