-- Aimbot - byJhonaDev139 - V0.2 com FOV, interface, filtros e controle de força
print("Aimbot - byJhonaDev139 - V0.2 com FOV, interface, filtros e controle de força")

local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "ohcyicyi"

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 220, 0, 300)
frame.Position = UDim2.new(0, 10, 0.5, -150)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.Active = true
frame.Draggable = true

Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

local function criarTexto(tamanho, pos, texto)
	local lbl = Instance.new("TextLabel", frame)
	lbl.Size = UDim2.new(1, -10, 0, 20)
	lbl.Position = pos
	lbl.BackgroundTransparency = 1
	lbl.Text = texto
	lbl.TextColor3 = Color3.new(1, 1, 1)
	lbl.Font = Enum.Font.SourceSansBold
	lbl.TextSize = tamanho
	lbl.TextXAlignment = Enum.TextXAlignment.Left
	lbl.TextWrapped = true
	return lbl
end

criarTexto(16, UDim2.new(0, 5, 0, 0), "Aimbot - byJhonaDev139 - V0.2")

local function criarToggle(y, texto, callback, default)
	local btn = Instance.new("TextButton", frame)
	btn.Size = UDim2.new(1, -10, 0, 25)
	btn.Position = UDim2.new(0, 5, 0, y)
	btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.SourceSans
	btn.TextSize = 14
	local estado = default
	btn.Text = texto .. ": " .. (estado and "✔" or "✘")
	btn.MouseButton1Click:Connect(function()
		estado = not estado
		btn.Text = texto .. ": " .. (estado and "✔" or "✘")
		callback(estado)
	end)
	callback(default)
	return btn
end

local ignoreDead, ignoreTeam, ignoreWall = true, true, false
local smoothness = 0.4

local aimbotActive = false
local fovCircle, connection
local runService = game:GetService("RunService")
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local camera = workspace.CurrentCamera
local radius = 100

local function criarSlider(y, label, min, max, callback)
	local lbl = criarTexto(14, UDim2.new(0, 5, 0, y), label .. ": " .. smoothness)
	local slider = Instance.new("TextButton", frame)
	slider.Size = UDim2.new(1, -10, 0, 25)
	slider.Position = UDim2.new(0, 5, 0, y + 20)
	slider.Text = "⬅️ Arraste para ajustar ➡️"
	slider.TextColor3 = Color3.new(1, 1, 1)
	slider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	slider.AutoButtonColor = false

	local dragging = false
	slider.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end
	end)
	slider.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
	end)

	runService.RenderStepped:Connect(function()
		if dragging then
			local mouseX = game:GetService("UserInputService"):GetMouseLocation().X
			local relative = math.clamp((mouseX - slider.AbsolutePosition.X) / slider.AbsoluteSize.X, 0, 1)
			local valor = math.floor(((min + (max - min) * relative) * 100) + 0.5) / 100
			lbl.Text = label .. ": " .. valor
			callback(valor)
		end
	end)
end

-- Toggles e sliders
local yOffset = 30
criarToggle(yOffset, "Ignorar Mortos", function(val) ignoreDead = val end, true)
yOffset += 30
criarToggle(yOffset, "Ignorar Time", function(val) ignoreTeam = val end, true)
yOffset += 30
criarToggle(yOffset, "Ignorar Atrás da Parede", function(val) ignoreWall = val end, false)
yOffset += 30
criarSlider(yOffset, "Força do Aimbot", 0.1, 1, function(val) smoothness = val end)
yOffset += 60

-- Botão Ativar Aimbot
local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(1, -10, 0, 30)
toggleButton.Position = UDim2.new(0, 5, 0, yOffset)
toggleButton.Text = "Ativar Aimbot"
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

yOffset += 35

-- Ajustes FOV
local incFov = Instance.new("TextButton", frame)
incFov.Size = UDim2.new(0.5, -7, 0, 25)
incFov.Position = UDim2.new(0, 5, 0, yOffset)
incFov.Text = "Aumentar FOV"
incFov.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
incFov.TextColor3 = Color3.new(1, 1, 1)

local decFov = incFov:Clone()
decFov.Text = "Diminuir FOV"
decFov.Position = UDim2.new(0.5, 2, 0, yOffset)
decFov.Parent = frame

incFov.Parent = frame
yOffset += 30

-- Encerrar
local closeBtn = Instance.new("TextButton", frame)
closeBtn.Size = UDim2.new(1, -10, 0, 30)
closeBtn.Position = UDim2.new(0, 5, 0, yOffset)
closeBtn.Text = "Encerrar Script"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)

-- FOV
local function createFOV()
	if fovCircle then fovCircle:Remove() end
	fovCircle = Drawing.new("Circle")
	fovCircle.Visible = true
	fovCircle.Radius = radius
	fovCircle.Thickness = 2
	fovCircle.Transparency = 1
	fovCircle.Color = Color3.fromRGB(255, 0, 0)
	fovCircle.Filled = false
end

local function updateFOVPos()
	if fovCircle then
		fovCircle.Position = Vector2.new(camera.ViewportSize.X / 2 - 1, camera.ViewportSize.Y / 2)
	end
end

local function isVisible(targetPart)
	local origin = camera.CFrame.Position
	local direction = (targetPart.Position - origin)
	local ray = Ray.new(origin, direction)
	local hitPart = workspace:FindPartOnRay(ray, localPlayer.Character)
	return not hitPart or hitPart:IsDescendantOf(targetPart.Parent)
end

local function getClosestPlayer()
	local closest = nil
	local shortestDist = math.huge
	for _, player in pairs(players:GetPlayers()) do
		if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Head") and player.Character:FindFirstChild("Humanoid") then
			if ignoreDead and player.Character.Humanoid.Health <= 0 then continue end
			if ignoreTeam and player.Team == localPlayer.Team then continue end
			if ignoreWall and not isVisible(player.Character.Head) then continue end

			local head = player.Character.Head
			local screenPos, onScreen = camera:WorldToViewportPoint(head.Position)
			if onScreen then
				local dist = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)).Magnitude
				local realDist = (localPlayer.Character.HumanoidRootPart.Position - head.Position).Magnitude
				if dist <= radius and realDist < shortestDist then
					shortestDist = realDist
					closest = head
				end
			end
		end
	end
	return closest
end

local function enableAimbot()
	createFOV()
	connection = runService.RenderStepped:Connect(function()
		updateFOVPos()
		local target = getClosestPlayer()
		if target then
			local currentLook = camera.CFrame.LookVector
			local direction = (target.Position - camera.CFrame.Position).Unit
			local newLook = currentLook:Lerp(direction, smoothness)
			camera.CFrame = CFrame.new(camera.CFrame.Position, camera.CFrame.Position + newLook)
		end
	end)
end

local function disableAimbot()
	if connection then connection:Disconnect() end
	if fovCircle then fovCircle:Remove() end
end

toggleButton.MouseButton1Click:Connect(function()
	aimbotActive = not aimbotActive
	toggleButton.Text = aimbotActive and "Desativar Aimbot" or "Ativar Aimbot"
	if aimbotActive then
		enableAimbot()
	else
		disableAimbot()
	end
end)

incFov.MouseButton1Click:Connect(function()
	radius += 10
	if fovCircle then fovCircle.Radius = radius end
end)

decFov.MouseButton1Click:Connect(function()
	radius = math.max(10, radius - 10)
	if fovCircle then fovCircle.Radius = radius end
end)

closeBtn.MouseButton1Click:Connect(function()
	if connection then connection:Disconnect() end
	if fovCircle then fovCircle:Remove() end
	gui:Destroy()
end)
